const crypto = require("crypto");

const recipientPrivateKeyPem = `-----BEGIN PRIVATE KEY-----
MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDE0h+WPUnWoBuj
GABbecHtPeW95Q/zfsMWIB6vaD327RnMmdqiCIg/sjO049aAMcoJ9rUF50IjE/dK
keIipvwdRxSrW3bQbVBH0QJEnyzGTVm6d8WwQC+b8kzntpl7tQ0Rd49fKti9XcSY
7oCtQVAkzaaz1e1GqU7ijGKAnpIUanF4eI3S54IYpIOiapznuV75/f6G4ZEeWtY2
axvgYw5CGt8Org+I7YpJxBxXAbUsDiotqRvidEwnZFeAgWxrEuYCrHSo9Jar019w
Ef8lc9XtOO2q331bZDM7hm18HcPp85PbowBqi1oVK82GWnCKJa2Gyl7eVKgpsBxX
F/3wLKvlAgMBAAECggEAAdertwbU2Z7/EzxGyJRvtc5WB7yMtS1TGzJqxx6VMeoP
S0SHcOvehqYe6MsXN3T/3K8EC82Z52Uo8/hAoy1n/8gqD96X0qSrUzjIKidJToPr
2pyDa752E6IliSfC8Q8FU8wIOg5XIBKwI/RbnQOXAfkw3c8bXQV5uRIyW9zgJjPC
rxEB+kCx0lOKpzsYcDlxco3SulmAoVjDYg9zzrj3OE0rIgmZE21MOqgM/s2mrRHx
Y9EMDLVL7NjD/m+/HFwA+IANHBwibkBGAEkltJtAMDnjZp/wRm+WhZZhoX8hUlzH
LE9Q51ar9Tg89+mc9Twz/Q4AUsrv4jHttwAPuOyUYQKBgQDlMCCQ5r5nJKclaX5C
HhwkWxX9M0DKPymFtYYQmC0CAstmNYp6pZeg/6a0lZ/8OHADauQ1V6XMRIi8yPCa
NX1yNZf3YE6zqmp93mkYlsPlOQUs/fE7XnuuPnJfA5ITIxXnau9q0mlLwQElmpBI
JQ6dimSpi9Lg/5JMZVQpWTwOUQKBgQDb2KRU3AYF3y7S8kys25tHjrpnfNeoQ80S
ZxeW/0g5M6xYAYTCkc97kISeRWOb28iFlU/o8HpcxmdAFVpYvLvprjE8VHA/5ci/
9BNPZZqJOoidnmSZCvG3nVp8RBGBAGicwXMGnLEPAADZg6US9+ebqp13O92BbIrC
aZ35UOt7VQKBgQCDxuJSrnm38Hkyp69y8MEZnk3MYhXUs/B58t981yK5z0WIJSzU
TDYc2iHOH2H3sbOmI2XHzfeEtbsxYRAGes8ARhR0pilaYJgOez1OaBGG0PxK3FBB
5JeUnk9Allr9KeVERFYYw5bLedPg/TgMY1I9/v7WBZFg0VIbHv//LlG7oQKBgQCD
NZdOdkq58mv1xlrwx9izKoIiBaaIbH7WPuUbX5zxVt/DXpSns3KLosMj2vIKMXBK
GcUpl2zQNjGlU5kqYOoeG7KS+SpNWI0p0zg7KL7ErEShHcmYdamyFp3MkKuJvH6z
H9nQ1m/uLehT6Xf6DC8U/w0f/oDDH87pHTQFesAwSQKBgHS4z/MG5L8JgS83v+0E
ieQFJ9barWs+hSMIqvS99oSVNF0TWxLCoK6/sWb19JYaUgtAet/saS+tLO6pVc/0
loj/pNuzewLzIb8Zw4E7pfnMp2Dqkf5rxNvHuCnhl26683I2CniPcEY1jbM8FwuV
unXxghAZyQ5fx6bbbrkFSUJG
-----END PRIVATE KEY-----`;

const recipientPrivateKey = crypto.createPrivateKey(recipientPrivateKeyPem);

const senderPublicKeyPem = `-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAmv9WakJ1pk06AguadIcM
aLgCnWzcc083K8bn19qY9jJzwMse6VBtrzywWVvnExceRWNfTVpfhbO4TYI/Fg2Y
8NOsKyo0wSsCooAvg0rwUNHEsms6a20kN/ySmHY5EblNaHcbw7nFlUSpiyLY418S
GsCIT0FQPq/PUKLbXoMLGYuemkNY/LROLMgCf0xRD20YqSBk/L03K4PoLKfn44XV
UrG7GVKsBeqccH4MufZhsLDc3g+dA70m4cU3wGerYqNBhFXNhrCHiPOs9wztOUCS
DDfZSjfXvoDocD7jOaPqro/XCo1HJyn7hDu9zXleHoHF7yMUyfu0sJ3pvu/ypaTg
nQIDAQAB
-----END PUBLIC KEY-----`;

const senderPublicKey = crypto.createPublicKey(senderPublicKeyPem);


const ciphertextHex = "a9e1b9f051d17ed583c8b0118a9e8aa47a7ceb427d94c9bc7fbb5466c3ee1a556723883b5a03bd1fe07d3f6fad6c5b9127d17ad2d791abe1400a17c989199bac4d6a80bcc789af5e35855cde306141ad65b5cf75b8683719e5a8263cdc93d88e81a4c9baeccf633733e75cecfc3d4c08b9cae8068edf166d03750c64819b87515a91f7bb5ecf5148c59d2f93e2a571f30f317c500e48443ff157472925f0dcac6597a4f5fcdba83e5aac43842ec4bdb1103a3879b65b1b6aef155d44c1d3770b2ca2728f991b9abd7caffeb902f9c866c305ce7a0c75ee1390b21454d52dd1ec6f6740ceb65606f9c525833ec263f12de544b852c90a4c2148191e588bdce09f";
const ciphertext = Buffer.from(ciphertextHex, "hex");

const signatureHex = "16f561339c78c5be97f60ef5a8267bd5ffd529ad000033ec28725c8f5732888bbb169a5f8705ae1fda165b35476d5045f1ccd1842795ff79fc5849f9359d1d359436c71696e43b193019968df8daedd0f5713b47e7d1acbba40eb266a9914c023e0fd459a2879e676a5772c79981c9a62c451de9252ec7283d5bd68441a46739f9fa6b6d45db5282286810d9581e4f3c677ecd6e23ab7fecaf1ed52d64ea8119e94abfa0200ab1873f544cfd085a9c87306bec3d7eba093c9a4ce27000ed7f328e0224036642a68c3b6285773c8beb03cecef905b1334de77cdb6e13334a75b7f6d42891bd6b347cb27e1afa219ea7814b6bd300a4e49fde8607c40ad2c596c0";
const signature = Buffer.from(signatureHex, "hex");


const recoveredPlaintext = crypto.privateDecrypt(recipientPrivateKey, ciphertext);
const message = recoveredPlaintext.toString("utf8");

const data = Buffer.from(message);
const isValid = crypto.verify("sha256", data, senderPublicKey, signature);

console.log("Signature Verification:", isValid);
console.log("Message:", message);